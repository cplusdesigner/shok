base class constructor should not call a virtual method!!!  because the derived
object's implementation might use members on the derived object which is not
initialized yet during the base constructor.  Does this affect shok at all !?

"Aggregation" is when a composition (e.g. object has members) is such that the
parent object being destroyed does not necessarily mean that the children are
destroyed.  Data structures are typically aggregates.
(from http://en.wikipedia.org/wiki/Composition_in_object-oriented_programming)

"Whereas public inheritance represents an "is-a" relationship and delegation
represents a "has-a" relationship, private (and protected) inheritance can be
thought of as an "is implemented in terms of" relationship.[1]"
(http://en.wikipedia.org/wiki/Implementation_inheritance)

Note that I can get better type rules on anything declared const.  i.e. a const
[duck] is a subtype of const [animal], because noone could accept const
[animal], receive a const [duck], and do anything bad (try to put dogs in it).



so-and-so (of Eiffel glory) talks about it <here> (thanks <Wikipedia>!).
