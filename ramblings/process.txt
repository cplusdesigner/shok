Lush: CmdLine*
CmdLine: wn | <ProgramInvocation:CmdEnd> | CmdBlock
ProgramInvocation: [w Program ProgramArgs Endl]     '[cmd %s%s]' [1 2]

CmdBlock: [w <LBRACE:CmdBlockStart>
             (<ExpBlockProgram:CmdEnd> | CmdCodeBlockBody)]

ExpBlockProgram: [w Exp w <RBRACE:ExpBlockEnd> ProgramMore ProgramArgs Endl]

CmdCodeBlockBody: (n | <[RBRACE wn]:CmdCodeBlockEnd> |
                       <[Stmt,CmdCodeBlockEndl]:StmtEnd>)*

Stmt...CodeBlock: [<LBRACE:CodeBlockStart> CodeBlockBody]
CodeBlockBody: (n | <RBRACE:CodeBlockEnd> |
                    <[Stmt,Endl]:StmtEnd>)*

Program: [ID ProgramMore]                           '%s%s' [0 1]
ProgramMore: ProgramArg*          ' %s'
ProgramArgs: [ws ProgramArg+]*    ' %s'             '%s' [1]
ProgramArg: ID | PLUS | MINUS | INT |
                                [LBRACE w Exp w RBRACE] {(exp %s)}
Endl: [w SEMI] | wn | <[w,RBRACE]:BlockLazyEnd>
CmdCodeBlockEndl: [w SEMI] | wn | <[w,RBRACE,wn]:BlockLazyEnd>

Actions:
--------
CmdEnd:
  emit parser.display()
CmdBlockStart:
  emit '['
  BlockStart()

ExpBlockEnd:

CodeBlockStart:

CodeBlockEnd:

StmtEnd:

