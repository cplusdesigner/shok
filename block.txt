{
wn
stmt
block

{
  (w block)*
  (   (wn block*)*
    | stmt (; stmt|block)* (;) NEWL
  )*
}


OR, simpler:

{
  (
      wn
    | w stmt w ;
    | w block (;)?
  )*
  (
    wn*
    | w stmt (;)?
  )
}

Both may not work.  Maybe our whole finish() mechanism is broken.
What we might do is, if we're about to double-finish() something after
we realized we output something maybe wrong, see if the *right* thing
gives the identical text output, and if so, proceed as usual.  That
is, cover up the mistake.... o noez..... haaaaack.

Each Seq should be able to split itself, anytime it goes "ok" but not
"done" at a step, split itself to attempt going along the path where
it may end up turning bad at that parser and have to feed accumulated
tokens forward.  And if the display() at each step of both parsers
matches, then we can output them immediately and not wait.

